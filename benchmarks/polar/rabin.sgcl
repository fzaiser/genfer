# flags(geobound): --optimizer ipopt --optimizer linear

# Rabin's mutual exclusion algorithm (see "Probabilistic guarded commands mechanized in HOL" by Hurd, McIver, and Morgan)

i ~ Geometric(1/2);
n := 0;
phase := 0;
while 1 < i or phase = 1 {
    if phase = 0 {
        phase := 1;
        # n := i;
        temp := 0;
        while i > 0 {
            i -= 1;
            temp += 1;
        }
        while temp > 0 {
            i += 1;
            n += 1;
            temp -= 1;
        }
    } else {
        if 0 < n {
            if flip(1/2) {
                i -= 1;
            }
            n -= 1;
        } else {
            phase := 0;
        }
    }
}
return i;

#= https://github.com/probing-lab/polar/blob/5fb1f34a8085d49ba91920ebaf8298e2d46fb387/benchmarks/k_induction/rabin.prob
# Note: there are mistakes in the code from the Polar repo. The correct code is above.
phase = 0
while 1 < i && phase == 1:
    if phase == 0:
        n = 1
        phase = 1
    else:
        if 0 < n:
            d = Bernoulli(1/2)
            i = i - d
            n = n - 1
        else:
            phase = 0
        end
    end
end

=#
