swapped := 0;
x ~ Geometric(1/2);
y ~ Geometric(1/2);
while (x > 0 and not swapped) or (y > 0 and swapped) {
    if 1 ~ Bernoulli(1/3) {
        if swapped = 0 {
            x -= 1;
        } else {
            y -= 1;
        }
    } else if 1 ~ Bernoulli(1/2) {
        if swapped = 0 {
            x -= 2;
        } else {
            y -= 2;
        }
    } else {
        if swapped = 0 {
            x -= 3;
        } else {
            y -= 3;
        }
    }
}
return x;

#= https://github.com/probing-lab/polar/blob/5fb1f34a8085d49ba91920ebaf8298e2d46fb387/benchmarks/k_induction/c4B_t303.prob
while 0 < x:
    r = 1 {1/3} 2 {1/3} 3
    x = x - r
    x, y = y, x
end
=#