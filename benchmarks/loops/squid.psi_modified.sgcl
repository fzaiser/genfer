# Adapted from https://github.com/eth-sri/psi/blob/f9aa5028235e46b5a02dbe67e37d39b0ab53f412/test/squid.psi
# Note that this loop is actually bounded

known := 0;

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

cur_person_alive := 1;
while cur_person_alive != 0 and known < 18 {
    cur_person_alive ~ Bernoulli(0.5);
    known += 1;
}

return cur_person_alive;

#= Original PSI code:

tiles:=18;
people:=16;
def main(){
	known:=0;
	r:=[];
	for i in 0..people{
		alive := true;
		while alive && known<tiles{
			alive = flip(1/2);
			known += 1;
		}
		r~=[Expectation(alive)];
	}
	return r; // expected: Î´(1/262144,19/262144,43/65536,247/65536,253/16384,1577/32768,7795/65536,15751/65536,53381/131072,77691/131072,49785/65536,57741/65536,31191/32768,16131/16384,65289/65536,65493/65536)[r]
}

=#