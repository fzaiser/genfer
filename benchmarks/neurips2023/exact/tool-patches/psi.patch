diff --git a/backend.d b/backend.d
index 0365f48..62f8207 100644
--- a/backend.d
+++ b/backend.d
@@ -73,6 +73,11 @@ void printResult(Backend be,string path,FunctionDef fd,ErrorHandler err,bool isM
 				break;
 		}
 	}
+
+	// Start timer
+	import core.time : MonoTime, MonoTimeImpl, Duration;
+	auto start = MonoTime.currTime;
+
 	if(opt.backend==InferenceMethod.simulate){
 		DExprSet samples;
 		DExpr expectation;
@@ -144,6 +149,13 @@ void printResult(Backend be,string path,FunctionDef fd,ErrorHandler err,bool isM
 		auto exp=!dist.isTuple?dist.orderedFreeVars[0]:dTuple(cast(DExpr[])dist.orderedFreeVars);
 		// TODO: do not compute full distribution with --expectation switch
 		auto expectation = computeExpectation(dist,exp,fd.ret).simplify(one);
+		
+		// Stop timer:
+		Duration dur = MonoTime.currTime - start;
+		write("Total inference time: ");
+		write(dur.total!"usecs" / 1_000_000f);
+		writeln("s");
+
 		final switch(opt.outputForm){
 			case OutputForm.default_:
 				auto astr=dist.argsToString(opt.formatting);
@@ -176,6 +188,13 @@ void printResult(Backend be,string path,FunctionDef fd,ErrorHandler err,bool isM
 	if(expected.exists) with(expected){
 		writeln(ex==dist.distribution.toString()?todo?"FIXED":"PASS":todo?"TODO":"FAIL");
 	}
+			
+	// Stop timer:
+	Duration dur = MonoTime.currTime - start;
+	write("Total inference time: ");
+	write(dur.total!"usecs" / 1_000_000f);
+	writeln("s");
+
 	printDist(dist);
 	if(opt.casBench){
 		import std.file, std.conv;
