// skipped

def main(){
    controlGroup := [0,0,1,0,0];
    treatedGroup := [1,0,1,1,1];

    isEffective := flip(1/2);
    probIfTreated := beta(1,1);
    probIfControl := if isEffective { beta(1,1) } else { probIfTreated };

    for i in [0..controlGroup.length){
        observe(controlGroup[i] == flip(probIfControl));
    }
    for i in [0..treatedGroup.length){
        observe(treatedGroup[i] == flip(probIfTreated));
    }

    isEffectiveP := sample(Marginal(isEffective));
    observe(isEffective);
    return (isEffectiveP,probIfTreated,probIfControl); // expected: (-1/2·probIfControl·probIfTreated⁵+-1/2·probIfControl⁵·probIfTreated⁵+-2·probIfControl²·probIfTreated⁴+-2·probIfControl⁴·probIfTreated⁴+-3·probIfControl³·probIfTreated⁵+1/2·probIfControl·probIfTreated⁴+1/2·probIfControl⁵·probIfTreated⁴+2·probIfControl²·probIfTreated⁵+2·probIfControl⁴·probIfTreated⁵+3·probIfControl³·probIfTreated⁴)·(23100/17·δ(1)[isEffectiveP]+7500/17·δ(0)[isEffectiveP])·[-1+probIfControl≤0]·[-1+probIfTreated≤0]·[-probIfControl≤0]·[-probIfTreated≤0]
}
