# flags(geobound): --optimizer ipopt --optimizer linear

# true EV: 0.6666...

# See also: https://www.prismmodelchecker.org/casestudies/self-stabilisation.php

process1 ~ Bernoulli(1/2);
process2 ~ Bernoulli(1/2);
process3 ~ Bernoulli(1/2);

sum := process1;
sum += process2;
sum += process3;

count := 0;
while sum > 1 {
	oldprocess1 := process1;
	oldprocess2 := process2;
	oldprocess3 := process3;

	if oldprocess1 = 1 {
		process1 := 0;
		if flip(1/2) {
			process3 := 1;
		} else {
			process2 := 1;
		}
	}

	if oldprocess2 = 1 {
		process2 := 0;
		if flip(1/2) {
			process1 := 1;
		} else {
			process3 := 1;
		}
	}

	if oldprocess3 = 1 {
		process3 := 0;
		if flip(1/2) {
			process2 := 1;
		} else {
			process1 := 1;
		}
	}

	sum := process1;
	sum += process2;
	sum += process3;

	count += 1;
}
return count;

#= https://github.com/eth-sri/psi/blob/9db68ba9581b7a1211f1514e44e7927af24bd398/test/colorado/probabilistic-program-benchmarks/israeli-jalfon-3.imp
p = 0.5;

process1 = 0.0;
process2 = 0.0;
process3 = 0.0;

if (unifReal(0,1) <= p)
then
	process1 = 1.0
end;
if (unifReal(0,1) <= p)
then
	process2 = 1.0
end;
if (unifReal(0,1) <= p)
then
	process3 = 1.0
end;

sum = process1 + process2 + process3;
if (sum > 1.0)
then
	notStable = 1.0
else
	notStable = 0.0
end;	

count = 0;
while (notStable > 0.5) do
      oldprocess1 = process1;
      oldprocess2 = process2;
      oldprocess3 = process3;
      
      if (oldprocess1 > 0.5) 
      then
	if (unifReal(0,1) <= p)
	then
		process1 = 0.0;
		process3 = 1.0
      	else
		process1 = 0.0;
		process2 = 1.0
     	end
      end;

      if (oldprocess2 > 0.5) 
      then
	if (unifReal(0,1) <= p)
	then
		process2 = 0.0;
		process1 = 1.0
      	else
		process2 = 0.0;
		process3 = 1.0
     	end
      end;
      
      if (oldprocess3 > 0.5) 
      then
	if (unifReal(0,1) <= p)
	then
		process3 = 0.0;
		process2 = 1.0
      	else
		process3 = 0.0;
		process1 = 1.0
     	end
      end;

      sum = process1 + process2 + process3;
      if (sum > 1.0)
      then
	notStable = 1.0
      else
	notStable = 0.0
      end;
      
      count = count + 1
end;

estimateProb(count < 1);
estimateProb(sum < 0.5);
estimateProb(count >= 1);
estimateProb(count >= 5);
estimateProb(count >= 10);
estimateProb(count >= 20);
estimateProb(count >= 50);
estimateProb(count >= 100)
=#
